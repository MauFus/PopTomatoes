// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package popt.showtimes;

public final class SeatsAllocatorImpl_Stub
    extends java.rmi.server.RemoteStub
    implements popt.rmi.SeatsAllocator, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_searchAvailableSeats_0;
    private static java.lang.reflect.Method $method_sellSeat_1;
    
    static {
	try {
	    $method_searchAvailableSeats_0 = popt.rmi.SeatsAllocator.class.getMethod("searchAvailableSeats", new java.lang.Class[] {popt.data.Showtime.class, int.class});
	    $method_sellSeat_1 = popt.rmi.SeatsAllocator.class.getMethod("sellSeat", new java.lang.Class[] {popt.data.Showtime.class, popt.data.Seat[].class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public SeatsAllocatorImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of searchAvailableSeats(Showtime, int)
    public popt.data.Seat[] searchAvailableSeats(popt.data.Showtime $param_Showtime_1, int $param_int_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_searchAvailableSeats_0, new java.lang.Object[] {$param_Showtime_1, new java.lang.Integer($param_int_2)}, -9005784249918275926L);
	    return ((popt.data.Seat[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of sellSeat(Showtime, Seat[])
    public void sellSeat(popt.data.Showtime $param_Showtime_1, popt.data.Seat[] $param_arrayOf_Seat_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_sellSeat_1, new java.lang.Object[] {$param_Showtime_1, $param_arrayOf_Seat_2}, -8198920641952847121L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
